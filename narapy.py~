import numpy as np

def lomb_scargle(t, x, n, nout = 4*n, dfreq = 0, alarm_rate = 0.01):
    
    if dfreq == 0:
        dt = t[n-1]-t[0]
        f_ny = 0.5*n/dt
        dfreq = f_ny/nout

    e = np.ones(n)
    freq_dot_t = np.dot(freq, t)
    
    sum2s = np.dot(np.sin(2.*2.*np.pi*freq_dot_t), e)
    sum2c = np.dot(np.cos(2.*2.*np.pi*freq_dot_t), e)

    tau = np.arctan(sum2s/sum2c)/(2.*np.pi*freq)
    
    print(tau)
    s = np.sin(2.*np.pi*(freq_dot_t - np.dot(freq*tau, e) ))
    c = np.cos(2.*np.pi*(freq_dot_t - np.dot(freq*tau, e) ))
    
    sy = np.dot(s, data)
    cy = np.dot(c, data)
    s1 = np.dot(s, e)
    c1 = np.dot(c, e)
    s2 = np.dot(s**2, e)
    c2 = np.dot(c**2, e)
    
    p = 0.5*(cy**2/c2 + sy**2/s2)
    
    print(p)
    res = {"freq": freq, "pl": p}
    
    return res
